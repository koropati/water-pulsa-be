{
  "openapi": "3.0.0",
  "info": {
    "title": "Sipelayar API",
    "version": "1.0.0",
    "description": "API documentation for Sipelayar application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "V1 Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token issued on login"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key issued to clients"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/device/auth": {
      "post": {
        "summary": "Authenticate a device",
        "tags": [
          "Device"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device authentication successful"
          },
          "401": {
            "description": "Invalid API key"
          },
          "404": {
            "description": "Device not found or inactive"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/device/balance": {
      "post": {
        "summary": "Check device balance",
        "tags": [
          "Device"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device balance retrieved successfully"
          },
          "401": {
            "description": "Invalid API key"
          },
          "403": {
            "description": "Device is inactive"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/device/usage": {
      "post": {
        "summary": "Log device usage",
        "tags": [
          "Device"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey",
                  "usageAmount"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  },
                  "usageAmount": {
                    "type": "number",
                    "description": "Amount of usage to log"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usage logged successfully"
          },
          "400": {
            "description": "Invalid usage amount"
          },
          "401": {
            "description": "Invalid API key"
          },
          "403": {
            "description": "Device is inactive"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/device/token/validate": {
      "post": {
        "summary": "Validate a device token",
        "tags": [
          "Device"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey",
                  "token"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token validated successfully"
          },
          "401": {
            "description": "Invalid API key"
          },
          "403": {
            "description": "Device is inactive"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user-profile": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete user account",
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user-profile/change-password": {
      "post": {
        "summary": "Change user password",
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user-profile/settings": {
      "put": {
        "summary": "Update user settings",
        "tags": [
          "User Profile"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Settings updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api-keys": {
      "get": {
        "summary": "Get all API keys",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by status (true/false)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of API keys"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new API key",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string",
                    "description": "Required for admins creating API key for other users"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration date (ISO 8601 format)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API key created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api-keys/{id}": {
      "get": {
        "summary": "Get API key by ID",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key ID"
          }
        ],
        "responses": {
          "200": {
            "description": "API key details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API key not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update an API key",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration date (ISO 8601 format) or null to remove expiration"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API key not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an API key",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key ID"
          }
        ],
        "responses": {
          "200": {
            "description": "API key deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API key not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api-keys/{id}/usage": {
      "get": {
        "summary": "Get API key usage history",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "API key usage history"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API key not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api-keys/stats": {
      "get": {
        "summary": "Get API key statistics",
        "tags": [
          "API Keys"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "API key statistics"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "ADMIN",
                      "STAFF",
                      "USER"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Get current user",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return current user"
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/balances": {
      "get": {
        "summary": "Get all balances",
        "tags": [
          "Balances"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "minBalance",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "description": "Minimum balance filter"
          },
          {
            "in": "query",
            "name": "maxBalance",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "description": "Maximum balance filter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of balances"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/balances/device/{deviceId}": {
      "get": {
        "summary": "Get balance for a specific device",
        "tags": [
          "Balances"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Device balance details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/balances/check": {
      "post": {
        "summary": "Check device balance by device key",
        "tags": [
          "Balances"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device balance checked successfully"
          },
          "400": {
            "description": "Device key is required"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Device is inactive"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/balances/update": {
      "post": {
        "summary": "Update balance for a device",
        "tags": [
          "Balances"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceId",
                  "amount"
                ],
                "properties": {
                  "deviceId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Positive or negative amount to update"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Balance updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/balances/stats": {
      "get": {
        "summary": "Get balance statistics",
        "tags": [
          "Balances"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Balance statistics"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "summary": "Get all devices",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for device key"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by status (true/false)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new device",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string",
                    "description": "Required for admins creating device for other users"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Device created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Device key already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "summary": "Get device by ID",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Device details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a device",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Device ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  },
                  "status": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "409": {
            "description": "Device key already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a device",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Device deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/devices/dropdown": {
      "get": {
        "summary": "Get devices for dropdown selection",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for device key or user"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of devices for dropdown"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/devices/stats": {
      "get": {
        "summary": "Get device statistics",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Device statistics"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/devices/auth": {
      "post": {
        "summary": "Authenticate a device by device key",
        "tags": [
          "Devices"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Device authenticated successfully"
          },
          "400": {
            "description": "Invalid device key"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Device is inactive"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "summary": "Get current user's profile",
        "tags": [
          "Profiles"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": [
          "Profiles"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete user profile",
        "tags": [
          "Profiles"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/profiles/avatar": {
      "get": {
        "summary": "Get user avatar",
        "tags": [
          "Profiles"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar URL"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete user avatar",
        "tags": [
          "Profiles"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/profiles/{id}": {
      "get": {
        "summary": "Get profile by ID (admin only)",
        "tags": [
          "Profiles"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Profile ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tokens": {
      "get": {
        "summary": "Get all tokens",
        "tags": [
          "Tokens"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "deviceId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by device ID"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "used",
                "unused"
              ]
            },
            "description": "Filter by token status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tokens"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new token",
        "tags": [
          "Tokens"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceId",
                  "amount"
                ],
                "properties": {
                  "deviceId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Token created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tokens/{id}": {
      "get": {
        "summary": "Get token by ID",
        "tags": [
          "Tokens"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Token ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Token details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Token not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tokens/device/{deviceId}": {
      "get": {
        "summary": "Get tokens for a specific device",
        "tags": [
          "Tokens"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Device ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "used",
                "unused"
              ]
            },
            "description": "Filter by token status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tokens for the device"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tokens/validate": {
      "post": {
        "summary": "Validate a token",
        "tags": [
          "Tokens"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "deviceKey"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "deviceKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token validated successfully"
          },
          "400": {
            "description": "Invalid token or device key"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Device is inactive"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tokens/stats": {
      "get": {
        "summary": "Get token statistics",
        "tags": [
          "Tokens"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token statistics"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/usage": {
      "get": {
        "summary": "Get all usage logs",
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "deviceId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by device ID"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by start date (ISO 8601 format)"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by end date (ISO 8601 format)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of usage logs"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/usage/device/{deviceId}": {
      "get": {
        "summary": "Get usage logs for a specific device",
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Device ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by start date (ISO 8601 format)"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter by end date (ISO 8601 format)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of usage logs for the device"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/usage/log": {
      "post": {
        "summary": "Log device usage and update balance",
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deviceKey",
                  "usageAmount"
                ],
                "properties": {
                  "deviceKey": {
                    "type": "string"
                  },
                  "usageAmount": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0.01
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usage logged successfully"
          },
          "400": {
            "description": "Validation error or insufficient balance"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Device is inactive"
          },
          "404": {
            "description": "Device not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/usage/stats": {
      "get": {
        "summary": "Get usage statistics",
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "timeRange",
            "schema": {
              "type": "integer",
              "default": 30
            },
            "description": "Time range in days (default 30)"
          }
        ],
        "responses": {
          "200": {
            "description": "Usage statistics"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for name or email"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "ADMIN",
                      "STAFF",
                      "USER"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "ADMIN",
                      "STAFF",
                      "USER"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/stats": {
      "get": {
        "summary": "Get user statistics",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User statistics"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/dropdown": {
      "get": {
        "summary": "Get users for dropdown selection",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for name or email"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users for dropdown"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - requires SUPER_ADMIN role"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}/toggle-status": {
      "patch": {
        "summary": "Toggle user active status",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "isActive"
                ],
                "properties": {
                  "isActive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "API Keys",
      "description": "API Key management"
    },
    {
      "name": "Authentication",
      "description": "User authentication and registration"
    },
    {
      "name": "Balances",
      "description": "Balance management"
    },
    {
      "name": "Device",
      "description": "IoT Device API"
    },
    {
      "name": "Devices",
      "description": "Device management"
    },
    {
      "name": "Profiles",
      "description": "User profile management"
    },
    {
      "name": "Tokens",
      "description": "Token management"
    },
    {
      "name": "Usage",
      "description": "Usage log management"
    },
    {
      "name": "User Profile",
      "description": "User profile management"
    },
    {
      "name": "Users",
      "description": "User management"
    }
  ]
}